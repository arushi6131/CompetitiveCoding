import java.util.Arrays;

public class Solution {
	public static int cutRod(int price[], int n) {
		// Write your code here.
		int dp[][] = new int[n][n+1];
		for(int[] rows: dp){
			Arrays.fill(rows, -1);
		}
		return f(n-1,n,price,dp);
	}

	public static int f(int i, int n, int[] price, int[][] dp){
		if(i==0) return price[0]*n;

		if(dp[i][n] != -1) return dp[i][n];

		int notTake = 0+ f(i-1,n,price,dp);
		int take = 0;

		if((i+1)<=n){
			take = price[i]+f(i,(n-(i+1)),price,dp);
		}

		dp[i][n] = Math.max(take, notTake);
		
		return dp[i][n];
	}
}
