import java.util.* ;
import java.io.*; 
public class Solution {
    public static int minSumPath(int[][] grid) {
    	// Write your code here.
        int[][] dp = new int[grid.length][grid[0].length];
        for(int[] row:dp){
            Arrays.fill(row, -1);
        }
        return f(0,0,grid.length,grid[0].length,grid,dp);
    }

    public static int f(int i, int j, int n, int m, int[][] grid, int[][] dp){
        if(i==n-1 && j==m-1) return grid[i][j];
        if(i>=n || j>=m) return (int) Math.pow(10, 9);

        if(dp[i][j]!=-1) return dp[i][j];

        int d = f(i,j+1,n,m,grid,dp);
        int r = f(i+1,j,n,m,grid,dp);

        dp[i][j] = Math.min(d, r)+grid[i][j];
        return dp[i][j];
    }
}
