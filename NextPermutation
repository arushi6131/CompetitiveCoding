import java.util.* ;
import java.io.*; 
import java.util.ArrayList;
import java.util.Collections;

public class Solution 
{
	public static ArrayList<Integer> nextPermutation(ArrayList<Integer> permutation) 
	{
		// Write your code here.
		int bp=-1;
		int n=permutation.size();

		for(int i=n-2;i>=0;i--){
			if(permutation.get(i)<permutation.get(i+1)){
				bp=i;
				break;
			}
		}

		if(bp==-1){
			Collections.reverse(permutation);
			return permutation;
		}
		
		// int lowest_ind=bp+1;
		// for(int i=bp+1;i<n;i++){
		// 	if(permutation.get(i)<permutation.get(lowest_ind)){
		// 		lowest_ind=i;
		// 	}
		// }
		
		// int tmp= permutation.get(lowest_ind);
		// permutation.set(lowest_ind, permutation.get(bp));
		// permutation.set(bp, tmp);

		for (int i = n - 1; i > bp; i--) {
            if (permutation.get(i) > permutation.get(bp)) {
                int tmp = permutation.get(i);
                permutation.set(i, permutation.get(bp));
                permutation.set(bp, tmp);
                break;
            }
        }

		List<Integer> sub = permutation.subList(bp+1, n);
		Collections.reverse(sub);

		return permutation;
	}
}
