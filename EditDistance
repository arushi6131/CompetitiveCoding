import java.util.Arrays;

public class Solution {

    public static int editDistance(String str1, String str2) {
        //Your code goes here
        int dp[][] = new int[str1.length()][str2.length()];
        for(int rows[]:dp) Arrays.fill(rows, -1);
        return f(str1.length()-1,str2.length()-1,str1,str2,dp);
    }
    public static int f(int i, int j, String S, String T, int dp[][]){
        if(i<0) return j+1;
        if(j<0) return i+1;
        if(dp[i][j]!=-1) return dp[i][j];

        if(S.charAt(i)==T.charAt(j)) return dp[i][j] = 0+f(i-1,j-1,S,T,dp);
        else{
            return dp[i][j] = 1+ Math.min(f(i,j-1,S,T,dp), Math.min(f(i-1,j,S,T,dp), f(i-1,j-1,S,T,dp)));
        }
    }
}
